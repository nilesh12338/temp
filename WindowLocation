(function() {
    const originalAssign = window.location.assign;
    const originalReplace = window.location.replace;

    function isSameOrigin(url) {
        try {
            const newURL = new URL(url, window.location.origin);
            return newURL.origin === window.location.origin;
        } catch (e) {
            return false;
        }
    }

    window.location.assign = function(url) {
        if (isSameOrigin(url)) {
            originalAssign.call(window.location, url);
        } else {
            console.warn('Cross-origin redirects are blocked:', url);
        }
    };

    window.location.replace = function(url) {
        if (isSameOrigin(url)) {
            originalReplace.call(window.location, url);
        } else {
            console.warn('Cross-origin redirects are blocked:', url);
        }
    };

    // Intercept direct href assignments
    Object.defineProperty(window.location, 'href', {
        set: function(url) {
            if (isSameOrigin(url)) {
                originalAssign.call(window.location, url);
            } else {
                console.warn('Cross-origin redirects are blocked:', url);
            }
        },
        get: function() {
            return window.location.toString();
        }
    });

})();
